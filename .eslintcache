[{"C:\\Users\\Sonu\\Desktop\\work\\resume builder\\frontend\\Resume_builder\\src\\index.js":"1","C:\\Users\\Sonu\\Desktop\\work\\resume builder\\frontend\\Resume_builder\\src\\serviceWorker.js":"2","C:\\Users\\Sonu\\Desktop\\work\\resume builder\\frontend\\Resume_builder\\src\\App.js":"3","C:\\Users\\Sonu\\Desktop\\work\\resume builder\\frontend\\Resume_builder\\src\\features\\counterSlice.js":"4","C:\\Users\\Sonu\\Desktop\\work\\resume builder\\frontend\\Resume_builder\\src\\pages\\Log\\SignIn.jsx":"5","C:\\Users\\Sonu\\Desktop\\work\\resume builder\\frontend\\Resume_builder\\src\\components\\NavBar.jsx":"6","C:\\Users\\Sonu\\Desktop\\work\\resume builder\\frontend\\Resume_builder\\src\\pages\\profile\\Questions.jsx":"7","C:\\Users\\Sonu\\Desktop\\work\\resume builder\\frontend\\Resume_builder\\src\\pages\\Log\\SignUp.jsx":"8","C:\\Users\\Sonu\\Desktop\\work\\resume builder\\frontend\\Resume_builder\\src\\pages\\Home.jsx":"9","C:\\Users\\Sonu\\Desktop\\work\\resume builder\\frontend\\Resume_builder\\src\\pages\\profile\\Profile.jsx":"10","C:\\Users\\Sonu\\Desktop\\work\\resume builder\\frontend\\Resume_builder\\src\\components\\SideBar.jsx":"11","C:\\Users\\Sonu\\Desktop\\work\\resume builder\\frontend\\Resume_builder\\src\\components\\Experience.jsx":"12","C:\\Users\\Sonu\\Desktop\\work\\resume builder\\frontend\\Resume_builder\\src\\components\\Education.jsx":"13","C:\\Users\\Sonu\\Desktop\\work\\resume builder\\frontend\\Resume_builder\\src\\reducers\\index.js":"14","C:\\Users\\Sonu\\Desktop\\work\\resume builder\\frontend\\Resume_builder\\src\\reducers\\loginUser.js":"15","C:\\Users\\Sonu\\Desktop\\work\\resume builder\\frontend\\Resume_builder\\src\\actions\\index.js":"16","C:\\Users\\Sonu\\Desktop\\work\\resume builder\\frontend\\Resume_builder\\src\\HOC\\ProtectedRoutes.js":"17","C:\\Users\\Sonu\\Desktop\\work\\resume builder\\frontend\\Resume_builder\\src\\pages\\view\\QuestionsView.jsx":"18","C:\\Users\\Sonu\\Desktop\\work\\resume builder\\frontend\\Resume_builder\\src\\pages\\profile\\Admin.jsx":"19","C:\\Users\\Sonu\\Desktop\\work\\resume builder\\frontend\\Resume_builder\\src\\components\\Question.jsx":"20","C:\\Users\\Sonu\\Desktop\\work\\resume builder\\frontend\\Resume_builder\\src\\components\\SidebarView.jsx":"21"},{"size":1374,"mtime":1611692505281,"results":"22","hashOfConfig":"23"},{"size":5141,"mtime":1611052240552,"results":"24","hashOfConfig":"23"},{"size":1292,"mtime":1611663249624,"results":"25","hashOfConfig":"23"},{"size":1551,"mtime":1611052240548,"results":"26","hashOfConfig":"23"},{"size":3553,"mtime":1611673509520,"results":"27","hashOfConfig":"23"},{"size":2209,"mtime":1611736019955,"results":"28","hashOfConfig":"23"},{"size":3129,"mtime":1611698868304,"results":"29","hashOfConfig":"23"},{"size":5979,"mtime":1611674342348,"results":"30","hashOfConfig":"23"},{"size":8001,"mtime":1611735697543,"results":"31","hashOfConfig":"23"},{"size":16669,"mtime":1611735135687,"results":"32","hashOfConfig":"23"},{"size":815,"mtime":1611673004895,"results":"33","hashOfConfig":"23"},{"size":4609,"mtime":1611733857038,"results":"34","hashOfConfig":"23"},{"size":3672,"mtime":1611613142749,"results":"35","hashOfConfig":"23"},{"size":177,"mtime":1611432793404,"results":"36","hashOfConfig":"23"},{"size":1178,"mtime":1611601846847,"results":"37","hashOfConfig":"23"},{"size":678,"mtime":1611605316187,"results":"38","hashOfConfig":"23"},{"size":1142,"mtime":1611601982936,"results":"39","hashOfConfig":"23"},{"size":13681,"mtime":1611663171790,"results":"40","hashOfConfig":"23"},{"size":5174,"mtime":1611663171789,"results":"41","hashOfConfig":"23"},{"size":892,"mtime":1611663171787,"results":"42","hashOfConfig":"23"},{"size":590,"mtime":1611663171788,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},"1bvip91",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"47"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"47"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"47"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"47"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"47"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"C:\\Users\\Sonu\\Desktop\\work\\resume builder\\frontend\\Resume_builder\\src\\index.js",["94"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./styles/index.css\";\r\nimport \"./styles/grid.css\";\r\nimport \"./styles/scroll.styles.css\";\r\nimport \"./styles/animation.css\";\r\nimport App from \"./App\";\r\nimport allReducers from \"./reducers/index\";\r\nimport { createStore, compose, applyMiddleware } from \"redux\";\r\nimport axios from \"axios\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { QueryClient, QueryClientProvider, useQuery } from \"react-query\";\r\n\r\naxios.defaults.baseURL = \"https://resume-backend-api.herokuapp.com/\";\r\n\r\nconst queryClient = new QueryClient();\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(allReducers, composeEnhancer(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <QueryClientProvider client={queryClient}>\r\n        <App />\r\n      </QueryClientProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n",["95","96"],"C:\\Users\\Sonu\\Desktop\\work\\resume builder\\frontend\\Resume_builder\\src\\serviceWorker.js",[],"C:\\Users\\Sonu\\Desktop\\work\\resume builder\\frontend\\Resume_builder\\src\\App.js",[],"C:\\Users\\Sonu\\Desktop\\work\\resume builder\\frontend\\Resume_builder\\src\\features\\counterSlice.js",[],["97","98"],"C:\\Users\\Sonu\\Desktop\\work\\resume builder\\frontend\\Resume_builder\\src\\pages\\Log\\SignIn.jsx",["99","100"],"import React, { useEffect } from \"react\";\r\nimport { Col, Container, Form, Row, Button } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { loginUser } from \"../../actions\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n// Images\r\nimport imageOne from \"../../assets/profile/image-1.jpg\";\r\n\r\nexport const SignIn = () => {\r\n  const { register, handleSubmit, watch, errors } = useForm();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { isAuthenticated } = useSelector((state) => state.user);\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n    axios\r\n      .post(\"users/sign_in\", data)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.success === true) {\r\n          console.log(res);\r\n          loginUser(dispatch, res.data);\r\n          history.push(\"/profile\");\r\n          toast.success(\"Sign In Successfull\", 1000);\r\n        } else {\r\n          toast.error(res.data.message, 1000);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [history, isAuthenticated]);\r\n\r\n  return (\r\n    <section className=\"vh-100 vh-100-none-on-small d-flex align-items-center bg-pattern-1\">\r\n      <Container>\r\n        <Row className=\"justify-content-between align-items-center\">\r\n          <Col md={5}>\r\n            <div className=\"mb-3 small d-flex align-items-baseline\">\r\n              <span className=\"text-muted font-weight-bold\">\r\n                Not a member yet?\r\n              </span>\r\n              <Link to=\"/sign-up\" className=\"ml-2 text-info\">\r\n                Join now\r\n              </Link>\r\n            </div>\r\n            <Form onSubmit={handleSubmit(onSubmit)}>\r\n              <Form.Group className=\"small\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control\r\n                  name=\"email\"\r\n                  ref={register({ required: true })}\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                />\r\n                <Form.Text className=\"text-muted\">\r\n                  We'll never share your email with anyone else.\r\n                </Form.Text>\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"small\" controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  name=\"password\"\r\n                  ref={register({ required: true })}\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicCheckbox\">\r\n                <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n              </Form.Group>\r\n              <div className=\"mt-4\">\r\n                <Button block variant=\"info\" type=\"submit\">\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </Col>\r\n          <Col md={6} className=\"order-first order-md-last mb-3 mb-md-0\">\r\n            <img\r\n              className=\"rounded-lg shadow\"\r\n              height=\"100%\"\r\n              width=\"100%\"\r\n              src={imageOne}\r\n              alt=\"pic\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </section>\r\n  );\r\n};\r\n","C:\\Users\\Sonu\\Desktop\\work\\resume builder\\frontend\\Resume_builder\\src\\components\\NavBar.jsx",["101","102"],"C:\\Users\\Sonu\\Desktop\\work\\resume builder\\frontend\\Resume_builder\\src\\pages\\profile\\Questions.jsx",["103"],"import React, { useState } from \"react\";\r\nimport { Col, Form, Row, Table, Button } from \"react-bootstrap\";\r\nimport { SideBar } from \"../../components/SideBar\";\r\nimport axios from \"axios\";\r\nimport { useQuery } from \"react-query\";\r\n\r\nexport const Questions = () => {\r\n  const [answers, setAnswers] = useState([]);\r\n  const getQuestions = () => {\r\n    return axios\r\n      .get(\"questions/\")\r\n      .then((res) => {\r\n        return res.data.data;\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const { data, isLoading } = useQuery(\"questions\", getQuestions);\r\n\r\n  const handleChange = (e, id) => {\r\n    // console.log(e.target.value, id);\r\n    const statement = e.target.value;\r\n    const array = [];\r\n    const data = { statement, id };\r\n\r\n    setAnswers((currentData) => {\r\n      return { data, ...currentData }; // <<< spread inside an object\r\n    });\r\n  };\r\n\r\n  return (\r\n    <section className=\"pt-5 d-flex align-items-center my-5\">\r\n      {console.log(answers)}\r\n      <Row className=\"w-100 mx-0 px-lg-5\">\r\n        <Col lg={2} className=\"mb-4 mb-lg-0\">\r\n          <SideBar />\r\n        </Col>\r\n        <Col>\r\n          <div className=\"shadow-sm border p-4 rounded-lg\">\r\n            <h4>Questions Section</h4>\r\n            <Form>\r\n              <div>\r\n                <Table responsive bordered>\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"bg-info text-white text-center\">#</th>\r\n                      <th className=\"bg-info text-white\">Questions</th>\r\n                      <th className=\"bg-info text-white\">Answer</th>\r\n                    </tr>\r\n                  </thead>\r\n                  {isLoading ? (\r\n                    <>loading ...</>\r\n                  ) : (\r\n                    <tbody>\r\n                      {data.map((value) => (\r\n                        <tr key={value._id}>\r\n                          <td className=\"text-center font-weight-bold\">0</td>\r\n                          <td className=\"small\">\r\n                            <b className=\"mr-1\">{value.statement}</b>\r\n                            {/* <i>{value.subtitle}</i> */}\r\n                          </td>\r\n                          <td className=\"small w-50\">\r\n                            <Form.Control\r\n                              as=\"textarea\"\r\n                              className=\"input-group-text text-left\"\r\n                              placeholder=\"Type a Answer\"\r\n                              type=\"text\"\r\n                              rows={1}\r\n                              onChange={(e) => handleChange(e, value._id)}\r\n                            />\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  )}\r\n                </Table>\r\n              </div>\r\n\r\n              <div className=\"col col-md-6 col-lg-4 mt-2 mx-auto px-0 \">\r\n                <Button block variant=\"info\" type=\"submit\" className=\"py-4\">\r\n                  Save\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </section>\r\n  );\r\n};\r\n","C:\\Users\\Sonu\\Desktop\\work\\resume builder\\frontend\\Resume_builder\\src\\pages\\Log\\SignUp.jsx",["104","105"],"import React, { useEffect } from \"react\";\r\nimport { Col, Container, Form, Row, Button } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\n// Images\r\nimport imageTwo from \"../../assets/profile/image-2.jpg\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport const SignUp = () => {\r\n  const { register, handleSubmit, watch, errors } = useForm();\r\n  const history = useHistory();\r\n  const { isAuthenticated } = useSelector((state) => state.user);\r\n  const onSubmit = (data) => {\r\n    axios\r\n      .post(\"users/sign_up\", data)\r\n      .then((res) => {\r\n        if (res.data.success === true) {\r\n          history.push(\"/sign-in\");\r\n          toast.success(\"Please Sign in to the system\", 1000);\r\n        } else {\r\n          toast.error(res.data.message, 1000);\r\n        }\r\n      })\r\n      .catch((err) => toast.error(\"Something went wrong\", 1000));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [history, isAuthenticated]);\r\n\r\n  return (\r\n    <section className=\"bg-pattern vh-100 vh-100-none-on-small d-flex align-items-center text-white\">\r\n      <Container>\r\n        <Row className=\"justify-content-between align-items-center\">\r\n          <Col lg={12} xl={6}>\r\n            <div className=\"mb-3 small d-flex align-items-baseline\">\r\n              <span className=\"text-white-50 font-weight-bold\">\r\n                Already a member?\r\n              </span>\r\n              <Link to=\"/sign-in\" className=\"ml-2\">\r\n                Sign In\r\n              </Link>\r\n            </div>\r\n            <Form onSubmit={handleSubmit(onSubmit)} className=\"small\">\r\n              <Row>\r\n                <Col md={6}>\r\n                  <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>First Name</Form.Label>\r\n                    <Form.Control\r\n                      name=\"first_name\"\r\n                      ref={register({ required: true })}\r\n                      type=\"text\"\r\n                      placeholder=\"Enter First Name\"\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Last Name</Form.Label>\r\n                    <Form.Control\r\n                      name=\"last_name\"\r\n                      ref={register({ required: true })}\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Last Name\"\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control\r\n                  name=\"email\"\r\n                  ref={register({ required: true })}\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                />\r\n              </Form.Group>\r\n\r\n              <Row>\r\n                <Col md={6}>\r\n                  <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                      name=\"password\"\r\n                      ref={register({ required: true })}\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Confirm your password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" />\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n\r\n              {/* <Row>\r\n                <Col md={6}>\r\n                  <Form.Group>\r\n                    <Form.Label>Select your requirements from below</Form.Label>\r\n                    <Select options={options} placeholder='Requirements' />\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <Form.Group>\r\n                    <Form.Label>\r\n                      Select from below your area of operation\r\n                    </Form.Label>\r\n                    <Select options={options} placeholder='Area of operation' />\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col md={6}>\r\n                  <Form.Group>\r\n                    <Form.Label>Tell us your project finance needs</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      placeholder='project finance needs'\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <Form.Group>\r\n                    <Form.Label>\r\n                      What is the size of your organisation\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      placeholder='size of your organisation'\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row> */}\r\n\r\n              <div className=\"mt-4\">\r\n                <Button block variant=\"info\" type=\"submit\">\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </Col>\r\n          <Col\r\n            md={6}\r\n            lg={5}\r\n            className=\"order-first order-xl-last mb-3 mb-xl-0 mx-auto mx-xl-0\"\r\n          >\r\n            <img\r\n              // className='rounded-lg shadow'\r\n              height=\"100%\"\r\n              width=\"100%\"\r\n              src={imageTwo}\r\n              alt=\"pic\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </section>\r\n  );\r\n};\r\n","C:\\Users\\Sonu\\Desktop\\work\\resume builder\\frontend\\Resume_builder\\src\\pages\\Home.jsx",["106"],"C:\\Users\\Sonu\\Desktop\\work\\resume builder\\frontend\\Resume_builder\\src\\pages\\profile\\Profile.jsx",["107","108","109"],"C:\\Users\\Sonu\\Desktop\\work\\resume builder\\frontend\\Resume_builder\\src\\components\\SideBar.jsx",[],"C:\\Users\\Sonu\\Desktop\\work\\resume builder\\frontend\\Resume_builder\\src\\components\\Experience.jsx",["110","111"],"C:\\Users\\Sonu\\Desktop\\work\\resume builder\\frontend\\Resume_builder\\src\\components\\Education.jsx",["112","113"],"import React from \"react\";\r\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport const Education = ({ setShow, id }) => {\r\n  const { register, handleSubmit, watch, errors } = useForm();\r\n\r\n  const onSubmit = (data) => {\r\n    const data2 = { id, education: [data] };\r\n    axios\r\n      .post(\"users/update\", data2)\r\n      .then((res) => {\r\n        toast.success(\"Education Added Successfully\", 1000);\r\n        setShow(false);\r\n      })\r\n      .catch((err) => {\r\n        toast.error(\"Something Went Wrong!\", 1000);\r\n        setShow(false);\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <h4 className=\"mb-4 font-weight-bold text-center\">Education</h4>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Row>\r\n          <Col md={6}>\r\n            <Form.Group>\r\n              <Form.Label>\r\n                <small className=\"font-weight-bold\">School</small>\r\n              </Form.Label>\r\n              <Form.Control\r\n                className=\"input-group-text text-left\"\r\n                type=\"text\"\r\n                placeholder=\"School\"\r\n                name=\"school\"\r\n                ref={register({ required: true })}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md={6}>\r\n            <Form.Group>\r\n              <Form.Label>\r\n                <small className=\"font-weight-bold\">Degree</small>\r\n              </Form.Label>\r\n              <Form.Control\r\n                className=\"input-group-text text-left\"\r\n                type=\"text\"\r\n                placeholder=\"Degree\"\r\n                name=\"degree\"\r\n                ref={register({ required: true })}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col md={6}>\r\n            <Form.Label>\r\n              <small className=\"font-weight-bold\">Start Date</small>\r\n            </Form.Label>\r\n            <Form.Group>\r\n              <Form.Control\r\n                className=\"input-group-text text-left\"\r\n                type=\"date\"\r\n                name=\"start_date\"\r\n                ref={register({ required: true })}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md={6}>\r\n            <Form.Label>\r\n              <small className=\"font-weight-bold\">End Date</small>\r\n            </Form.Label>\r\n            <Form.Group>\r\n              <Form.Control\r\n                className=\"input-group-text text-left\"\r\n                type=\"date\"\r\n                name=\"end_date\"\r\n                ref={register({ required: true })}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n\r\n          <Col md={12}>\r\n            <Form.Label>\r\n              <small className=\"font-weight-bold\">Question</small>\r\n            </Form.Label>\r\n            <Form.Group>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                className=\"input-group-text text-left\"\r\n                placeholder=\"Why did you choose to study this degree/course/certificate? (In 60 seconds or 150 words or less)\"\r\n                type=\"text\"\r\n                rows={4}\r\n                name=\"q1_answer\"\r\n                ref={register({ required: true })}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <div className=\"mt-3\">\r\n          <Button\r\n            variant=\"info\"\r\n            block\r\n            type=\"submit\"\r\n            className=\"text-capitalize py-3\"\r\n          >\r\n            <small>Save Education</small>\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\Sonu\\Desktop\\work\\resume builder\\frontend\\Resume_builder\\src\\reducers\\index.js",[],"C:\\Users\\Sonu\\Desktop\\work\\resume builder\\frontend\\Resume_builder\\src\\reducers\\loginUser.js",[],"C:\\Users\\Sonu\\Desktop\\work\\resume builder\\frontend\\Resume_builder\\src\\actions\\index.js",[],"C:\\Users\\Sonu\\Desktop\\work\\resume builder\\frontend\\Resume_builder\\src\\HOC\\ProtectedRoutes.js",["114"],"import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory, Redirect } from \"react-router-dom\";\r\n\r\nimport { useEffect } from \"react\";\r\nimport { isLoggedIn } from \"../actions\";\r\n// import Navigationbar from '../components/Navigation/Navbar/Navbar';\r\n\r\nconst ProtectedRoutes = ({ children }) => {\r\n  const { isAuthenticated, isLoading } = useSelector((state) => state.user);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n\r\n  //   const isOrderPage = history.location.pathname !== '/order';\r\n\r\n  //   const isCheckout = history.location.pathname === '/cart-checkout';\r\n\r\n  useEffect(() => {\r\n    if (!isAuthenticated) {\r\n      isLoggedIn(dispatch);\r\n    }\r\n  }, [isAuthenticated, dispatch]);\r\n\r\n  if (isLoading) return \"loading\";\r\n\r\n  return (\r\n    <>\r\n      {isAuthenticated && !isLoading ? (\r\n        <>\r\n          <div className=\" container-fluid p-3 overflow-auto h-100vh\">\r\n            {children}\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Redirect to=\"/sign-in\" />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default ProtectedRoutes;\r\n","C:\\Users\\Sonu\\Desktop\\work\\resume builder\\frontend\\Resume_builder\\src\\pages\\view\\QuestionsView.jsx",[],"C:\\Users\\Sonu\\Desktop\\work\\resume builder\\frontend\\Resume_builder\\src\\pages\\profile\\Admin.jsx",[],"C:\\Users\\Sonu\\Desktop\\work\\resume builder\\frontend\\Resume_builder\\src\\components\\Question.jsx",[],"C:\\Users\\Sonu\\Desktop\\work\\resume builder\\frontend\\Resume_builder\\src\\components\\SidebarView.jsx",[],{"ruleId":"115","severity":1,"message":"116","line":16,"column":44,"nodeType":"117","messageId":"118","endLine":16,"endColumn":52},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"119","replacedBy":"123"},{"ruleId":"121","replacedBy":"124"},{"ruleId":"115","severity":1,"message":"125","line":15,"column":35,"nodeType":"117","messageId":"118","endLine":15,"endColumn":40},{"ruleId":"115","severity":1,"message":"126","line":15,"column":42,"nodeType":"117","messageId":"118","endLine":15,"endColumn":48},{"ruleId":"115","severity":1,"message":"127","line":11,"column":11,"nodeType":"117","messageId":"118","endLine":11,"endColumn":15},{"ruleId":"128","severity":1,"message":"129","line":26,"column":6,"nodeType":"130","endLine":26,"endColumn":23,"suggestions":"131"},{"ruleId":"115","severity":1,"message":"132","line":23,"column":11,"nodeType":"117","messageId":"118","endLine":23,"endColumn":16},{"ruleId":"115","severity":1,"message":"125","line":13,"column":35,"nodeType":"117","messageId":"118","endLine":13,"endColumn":40},{"ruleId":"115","severity":1,"message":"126","line":13,"column":42,"nodeType":"117","messageId":"118","endLine":13,"endColumn":48},{"ruleId":"115","severity":1,"message":"133","line":9,"column":10,"nodeType":"117","messageId":"118","endLine":9,"endColumn":17},{"ruleId":"115","severity":1,"message":"125","line":17,"column":35,"nodeType":"117","messageId":"118","endLine":17,"endColumn":40},{"ruleId":"115","severity":1,"message":"126","line":17,"column":42,"nodeType":"117","messageId":"118","endLine":17,"endColumn":48},{"ruleId":"115","severity":1,"message":"134","line":26,"column":11,"nodeType":"117","messageId":"118","endLine":26,"endColumn":16},{"ruleId":"115","severity":1,"message":"125","line":9,"column":35,"nodeType":"117","messageId":"118","endLine":9,"endColumn":40},{"ruleId":"115","severity":1,"message":"126","line":9,"column":42,"nodeType":"117","messageId":"118","endLine":9,"endColumn":48},{"ruleId":"115","severity":1,"message":"125","line":9,"column":35,"nodeType":"117","messageId":"118","endLine":9,"endColumn":40},{"ruleId":"115","severity":1,"message":"126","line":9,"column":42,"nodeType":"117","messageId":"118","endLine":9,"endColumn":48},{"ruleId":"115","severity":1,"message":"135","line":14,"column":9,"nodeType":"117","messageId":"118","endLine":14,"endColumn":16},"no-unused-vars","'useQuery' is defined but never used.","Identifier","unusedVar","no-native-reassign",["136"],"no-negated-in-lhs",["137"],["136"],["137"],"'watch' is assigned a value but never used.","'errors' is assigned a value but never used.","'user' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["138"],"'array' is assigned a value but never used.","'Profile' is defined but never used.","'data2' is assigned a value but never used.","'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},"Update the dependencies array to be: [dispatch, isAuthenticated]",{"range":"141","text":"142"},[722,739],"[dispatch, isAuthenticated]"]